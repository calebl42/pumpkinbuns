import { Glob } from "bun";
import { writeFileSync } from "fs";
import { join } from "path";

const chillingGlob = new Glob("public/chilling/*");
const eatingGlob = new Glob("public/eating/*");
const runningGlob = new Glob("public/running/*");
const sleepingGlob = new Glob("public/sleeping/*");

const chillingImagePaths: string[] = []
const eatingImagePaths: string[] = []
const runningImagePaths: string[] = []
const sleepingImagePaths: string[] = []

for await (const file of chillingGlob.scan(".")) {
  chillingImagePaths.push(file.substring(7));
}

for await (const file of eatingGlob.scan(".")) {
  eatingImagePaths.push(file.substring(7));
}

for await (const file of runningGlob.scan(".")) {
  runningImagePaths.push(file.substring(7));
}

for await (const file of sleepingGlob.scan(".")) {
  sleepingImagePaths.push(file.substring(7));
}

const outputPath = join("src", "imagePaths.ts");
const fileContent = `// This file is auto-generated by a build script. Do not edit manually.
\nexport const chillingImagePaths: string[] = ${JSON.stringify(chillingImagePaths)};
\nexport const eatingImagePaths: string[] = ${JSON.stringify(eatingImagePaths)};
\nexport const runningImagePaths: string[] = ${JSON.stringify(runningImagePaths)};
\nexport const sleepingImagePaths: string[] = ${JSON.stringify(sleepingImagePaths)};`;
writeFileSync(outputPath, fileContent, "utf-8");
console.log(`âœ… Successfully generated image list at ${outputPath}`);